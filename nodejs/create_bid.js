/* eslint-disable no-console */
// MIT License

const identity = require('freeverse-crypto-js');
const { digestBidFromAuctionId, sign } = require('freeverse-marketsigner-js');
const argv = require('minimist')(process.argv.slice(2), {
  string: [
    'pvk',
    'auctionId',
    'rnd',
    'extraPrice',
  ],
});

const {
  pvk,
  auctionId,
  extraPrice,
  rnd,
} = argv;

const checkArgs = () => {
  const OK = (pvk && auctionId && extraPrice && rnd);
  if (!OK) {
    console.log(`
    ---------------
    Usage Example: 
    node create_bid.js --pvk '0xd2827f4c3778758eb51719a698464aaffd10a5c7cf816c1de83c5e446bfc8e8d' --auctionId '0x81d6b8596f19fbf11f9484642cfb18e4763149ed1eabe5d514007e3d16b89399' --rnd 234124 --extraPrice 100 
    ---------------

    params:
    * pvk: the private key of the bidder
    * auctionId: the id of the auction that the bid refers to
    * extraPrice: the extra price relative to the starting price, in units of cents of EUR
    * rnd: a random number, generated by this new bidder
    `);
  }
  return OK;
};

const run = () => {
  // Note: before doing anything related to asset trading
  // the user's ID needs to be registered.
  // This registration needs to be done only once
  // for a given user's ID.
  // See the link_id_to_email.js examples

  const digest = digestBidFromAuctionId({
    auctionId,
    extraPrice,
    buyerRnd: rnd,
  });

  // create web3 account from your private key
  // (other forms of creating web3 account could be subsituted)
  const bidderAccount = identity.accountFromPrivateKey(pvk);
  const signature = sign({ digest, web3account: bidderAccount });
  const signatureToSend = signature.substring(2, signature.length);

  // inject results into final mutation to send to graphQL endpoint
  const assetMutation = `
mutation { 
  createBid(
    input: { 
      signature:"${signatureToSend}",
      auctionId: "${auctionId}",
      extraPrice: ${extraPrice},
      buyerId: "${bidderAccount.address}",
      rnd: ${rnd}
    }
  )
}`;

  console.log(assetMutation);
};

const OK = checkArgs();
if (OK) run();
