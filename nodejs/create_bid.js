/* eslint-disable no-console */
// MIT License

// Copyright (c) 2021 freeverse.io

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

const identity = require('freeverse-crypto-js');
const { digestBidFromAuctionId, sign } = require('freeverse-marketsigner-js');
const argv = require('minimist')(process.argv.slice(2), {
  string: [
    'pvk',
    'auctionId',
    'currencyId',
    'price',
    'sellerRnd',
    'validUntil',
    'timeToPay',
    'assetId',
    'bidderRnd',
    'extraPrice',
  ],
});

const {
  pvk,
  auctionId,
  extraPrice,
  rnd,
} = argv;

const checkArgs = () => {
  const OK = (pvk && auctionId && extraPrice && rnd);
  if (!OK) {
    console.log(`
    ---------------
    Usage Example: 
    node create_bid.js --pvk '0xd2827f4c3778758eb51719a698464aaffd10a5c7cf816c1de83c5e446bfc8e8d' --auctionId '0x81d6b8596f19fbf11f9484642cfb18e4763149ed1eabe5d514007e3d16b89399' --rnd 234124 --extraPrice 100 
    ---------------

    params:
    * pvk: the private key of the bidder
    * auctionId: the id of the auction that the bid refers to
    * extraPrice: the extra price relative to the starting price, in units of cents of EUR
    * rnd: a random number, generated by this new bidder
    `);
  }
  return OK;
};

const run = () => {
  const digest = digestBidFromAuctionId({
    auctionId,
    extraPrice,
    buyerRnd: rnd,
  });

  // create web3 account from your private key
  // (other forms of creating web3 account could be subsituted)
  const bidderAccount = identity.accountFromPrivateKey(pvk);
  const signature = sign({ digest, web3account: bidderAccount });

  // inject results into final mutation to send to graphQL endpoint
  const assetMutation = `
mutation { 
  createBid(
    input: { 
      signature:"${signature}",
      auctionId: "${auctionId}",
      extraPrice: ${extraPrice},
      buyerId: "${bidderAccount.address}",
      rnd: ${rnd}
    }
  )
}`;

  console.log(assetMutation);
};

const OK = checkArgs();
if (OK) run();
